// Source code is unavailable, and was generated by the Fernflower decompiler.
package com.example.websocket_demo;
import com.example.websocket_demo.client.WebSocketSessionManager;

import java.io.PrintStream;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.messaging.handler.annotation.MessageMapping;
import org.springframework.messaging.simp.SimpMessagingTemplate;
import org.springframework.stereotype.Controller;

@Controller
public class WebsocketController {
    private final SimpMessagingTemplate messagingTemplate;
    private final WebSocketSessionManager sessionManager;

    @Autowired
    public WebsocketController(SimpMessagingTemplate messagingTemplate, WebSocketSessionManager sessionManager) {
        this.sessionManager = sessionManager;
        this.messagingTemplate = messagingTemplate;
    }

    @MessageMapping({"/message"})
    public void handleMessage(Message message) {
        PrintStream var10000 = System.out;
        String var10001 = message.getUser();
        var10000.println("Received message from user: " + var10001 + ": " + message.getMessage());
        this.messagingTemplate.convertAndSend("/topic/messages", message);
        var10000 = System.out;
        var10001 = message.getUser();
        var10000.println("Sent message to /topic/messages: " + var10001 + ": " + message.getMessage());
    }

    @MessageMapping({"/connect"})
    public void connectUser(String username) {
        this.sessionManager.addUsername(username);
        this.sessionManager.broadcastActiveUsernames();
        System.out.println(username + " connected");
    }

    @MessageMapping({"/disconnect"})
    public void disconnectUser(String username) {
        this.sessionManager.removeUsername(username);
        this.sessionManager.broadcastActiveUsernames();
        System.out.println(username + " disconnected");
    }

    @MessageMapping({"/request-users"})
    public void requestUsers() {
        this.sessionManager.broadcastActiveUsernames();
        System.out.println("Requesting Users");
    }
}
